{"ast":null,"code":"var _jsxFileName = \"/Users/plabs/Documents/putri/project_plabs/tmovies-ui/src/pages/Movies.jsx\",\n  _s = $RefreshSig$();\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Navbar from \"../components/Navbar\";\nimport NotAvailable from \"../components/NotAvailable\";\nimport SelectGenre from \"../components/SelectGenre\";\nimport Slider from \"../components/Slider\";\nimport { fetchMovies, getGenres } from \"../store\";\nimport { firebaseAuth } from \"../utils/firebase-config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Movies() {\n  _s();\n  const [isScrolled, setIsScrolled] = useState(false);\n  const navigate = useNavigate();\n  const genresLoaded = useSelector(state => state.tmovies.genresLoaded);\n  const movies = useSelector(state => state.tmovies.movies);\n  const genres = useSelector(state => state.tmovies.genres);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    console.log(\"in use effect\");\n    dispatch(getGenres());\n  }, []);\n\n  // useEffect(()=> {\n  //     if(genresLoaded) dispatch(fetchMovies({genres, type: \"movies\" }));\n  // }, [genresLoaded]);\n\n  useEffect(() => {\n    if (genresLoaded) dispatch(fetchMovies({\n      type: \"movies\"\n    }));\n  }, [genresLoaded]);\n  window.onscroll = () => {\n    setIsScrolled(window.pageYOffset === 0 ? false : true);\n    return () => window.onscroll = null;\n  };\n  onAuthStateChanged(firebaseAuth, currentUser => {\n    // if (currentUser) navigate(\"/\");\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      children: /*#__PURE__*/_jsxDEV(Navbar, {\n        isScrolled: isScrolled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data\",\n      children: [/*#__PURE__*/_jsxDEV(SelectGenre, {\n        genres: genres,\n        type: \"movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), movies.length ? /*#__PURE__*/_jsxDEV(Slider, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 34\n      }, this) : /*#__PURE__*/_jsxDEV(NotAvailable, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 63\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(Movies, \"jMYmqki+WasMy55Ku9DniaiN6lw=\", false, function () {\n  return [useNavigate, useSelector, useSelector, useSelector, useDispatch];\n});\n_c = Movies;\nconst Container = styled.div`\n.data {\n    margin-top: 8rem;\n    .not-available {\n      text-align: center;\n      color: white;\n      margin-top: 4rem;\n    }\n  }\n`;\n\n// import React, { useEffect, useState } from \"react\";\n// import styled from \"styled-components\";\n// import Navbar from \"../components/Navbar\";\n// import CardSlider from \"../components/CardSlider\";\n// import { onAuthStateChanged } from \"firebase/auth\";\n// import { firebaseAuth } from \"../utils/firebase-config\";\n// import { useNavigate } from \"react-router-dom\";\n// import { useSelector, useDispatch } from \"react-redux\";\n// import { fetchMovies, getGenres } from \"../store\";\n// import SelectGenre from \"../components/SelectGenre\";\n// import Slider from \"../components/Slider\";\n// import NotAvailable from \"../components/NotAvailable\";\n\n// function MoviePage() {\n//   const [isScrolled, setIsScrolled] = useState(false);\n//   const movies = useSelector((state) => state.netflix.movies);\n//   const genres = useSelector((state) => state.netflix.genres);\n//   const genresLoaded = useSelector((state) => state.netflix.genresLoaded);\n\n//   const navigate = useNavigate();\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     dispatch(getGenres());\n//   }, []);\n\n//   useEffect(() => {\n//     if (genresLoaded) {\n//       dispatch(fetchMovies({ genres, type: \"movie\" }));\n//     }\n//   }, [genresLoaded]);\n\n//   const [user, setUser] = useState(undefined);\n\n//   onAuthStateChanged(firebaseAuth, (currentUser) => {\n//     if (currentUser) setUser(currentUser.uid);\n//     else navigate(\"/login\");\n//   });\n\n//   window.onscroll = () => {\n//     setIsScrolled(window.pageYOffset === 0 ? false : true);\n//     return () => (window.onscroll = null);\n//   };\n\n//   return (\n//     <Container>\n//       <div className=\"navbar\">\n//         <Navbar isScrolled={isScrolled} />\n//       </div>\n//       <div className=\"data\">\n//         <SelectGenre genres={genres} type=\"movie\" />\n//         {movies.length ? <Slider movies={movies} /> : <NotAvailable />}\n//       </div>\n//     </Container>\n//   );\n// }\n\n// const Container = styled.div`\n//   .data {\n//     margin-top: 8rem;\n//     .not-available {\n//       text-align: center;\n//       color: white;\n//       margin-top: 4rem;\n//     }\n//   }\n// `;\n// export default MoviePage;\n_c2 = Container;\nvar _c, _c2;\n$RefreshReg$(_c, \"Movies\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"names":["onAuthStateChanged","React","useEffect","useState","useDispatch","useSelector","useNavigate","styled","Navbar","NotAvailable","SelectGenre","Slider","fetchMovies","getGenres","firebaseAuth","Movies","isScrolled","setIsScrolled","navigate","genresLoaded","state","tmovies","movies","genres","dispatch","console","log","type","window","onscroll","pageYOffset","currentUser","length","Container","div"],"sources":["/Users/plabs/Documents/putri/project_plabs/tmovies-ui/src/pages/Movies.jsx"],"sourcesContent":["import { onAuthStateChanged } from \"firebase/auth\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Navbar from \"../components/Navbar\";\nimport NotAvailable from \"../components/NotAvailable\";\nimport SelectGenre from \"../components/SelectGenre\";\nimport Slider from \"../components/Slider\";\nimport { fetchMovies, getGenres } from \"../store\";\nimport { firebaseAuth } from \"../utils/firebase-config\";\n\nexport default function Movies(){\n\n    const [isScrolled, setIsScrolled] = useState(false);\n    const navigate = useNavigate();\n    const genresLoaded = useSelector((state) => state.tmovies.genresLoaded);\n    const movies = useSelector((state) => state.tmovies.movies) \n    const genres = useSelector((state) => state.tmovies.genres) \n\n    const dispatch = useDispatch();\n\n    useEffect(() => {   \n        console.log(\"in use effect\");\n        dispatch(getGenres());\n    }, []);\n\n\n    // useEffect(()=> {\n    //     if(genresLoaded) dispatch(fetchMovies({genres, type: \"movies\" }));\n    // }, [genresLoaded]);\n\n    useEffect(()=> {\n        if(genresLoaded) dispatch(fetchMovies({ type: \"movies\" }));\n    }, [genresLoaded]);\n\n    window.onscroll = () => {\n        setIsScrolled(window.pageYOffset === 0 ? false : true);\n        return () => (window.onscroll = null);\n    };\n\n\n    onAuthStateChanged(firebaseAuth, (currentUser) => {\n        // if (currentUser) navigate(\"/\");\n    });\n\n    return (\n        <Container>\n            <div className=\"navbar\">\n                <Navbar isScrolled={isScrolled}/>\n            </div>\n            <div className=\"data\">\n                <SelectGenre genres={genres} type=\"movie\"/>\n                {movies.length ? <Slider movies={movies} /> : <NotAvailable /> }\n            </div>\n        </Container>\n    );\n}\n\nconst Container = styled.div`\n.data {\n    margin-top: 8rem;\n    .not-available {\n      text-align: center;\n      color: white;\n      margin-top: 4rem;\n    }\n  }\n`;\n\n\n\n// import React, { useEffect, useState } from \"react\";\n// import styled from \"styled-components\";\n// import Navbar from \"../components/Navbar\";\n// import CardSlider from \"../components/CardSlider\";\n// import { onAuthStateChanged } from \"firebase/auth\";\n// import { firebaseAuth } from \"../utils/firebase-config\";\n// import { useNavigate } from \"react-router-dom\";\n// import { useSelector, useDispatch } from \"react-redux\";\n// import { fetchMovies, getGenres } from \"../store\";\n// import SelectGenre from \"../components/SelectGenre\";\n// import Slider from \"../components/Slider\";\n// import NotAvailable from \"../components/NotAvailable\";\n\n// function MoviePage() {\n//   const [isScrolled, setIsScrolled] = useState(false);\n//   const movies = useSelector((state) => state.netflix.movies);\n//   const genres = useSelector((state) => state.netflix.genres);\n//   const genresLoaded = useSelector((state) => state.netflix.genresLoaded);\n\n//   const navigate = useNavigate();\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     dispatch(getGenres());\n//   }, []);\n\n//   useEffect(() => {\n//     if (genresLoaded) {\n//       dispatch(fetchMovies({ genres, type: \"movie\" }));\n//     }\n//   }, [genresLoaded]);\n\n//   const [user, setUser] = useState(undefined);\n\n//   onAuthStateChanged(firebaseAuth, (currentUser) => {\n//     if (currentUser) setUser(currentUser.uid);\n//     else navigate(\"/login\");\n//   });\n\n//   window.onscroll = () => {\n//     setIsScrolled(window.pageYOffset === 0 ? false : true);\n//     return () => (window.onscroll = null);\n//   };\n\n//   return (\n//     <Container>\n//       <div className=\"navbar\">\n//         <Navbar isScrolled={isScrolled} />\n//       </div>\n//       <div className=\"data\">\n//         <SelectGenre genres={genres} type=\"movie\" />\n//         {movies.length ? <Slider movies={movies} /> : <NotAvailable />}\n//       </div>\n//     </Container>\n//   );\n// }\n\n// const Container = styled.div`\n//   .data {\n//     margin-top: 8rem;\n//     .not-available {\n//       text-align: center;\n//       color: white;\n//       margin-top: 4rem;\n//     }\n//   }\n// `;\n// export default MoviePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}